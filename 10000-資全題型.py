# --------------------------------------------------------------------------------------------------------

# [題目1]
# 現有一個List，其內容為： my_list=[10,20,30,10,20,30] 
# 請找出10位於此List的index位置 
# 請用print(List)的方式輸出結果
# 補充enumerate(my_list) 可以直接抓位置

from fcntl import F_FULLFSYNC


my_list=[10,20,30,10,20,30] 
my_list_out=[]
pos =10
for x in range(len(my_list)):
    if my_list[x] == pos:
        my_list_out.append(x)

print(my_list_out)

# my_list=[10,20,30,10,20,30]
# my_list_out=[]
# pos=0
# # for loop start


# #for loop end
# print(my_list_out)

# --------------------------------------------------------------------------------------------------------

# [題目2-1]
# 梯形面積 = (上底 + 下底) * 高 / 2 如果梯形上底為10，梯形下底為20，梯形高度為8 
# 計算的梯形面積為何? 請列印出 Area of a Trapezoid:??? (數值請求至小數點一位)

print(f"Area of a Trapezoid: {(10+20)*8/2:.1f}")

# --------------------------------------------------------------------------------------------------------

# [題目2-2]
# 計算2的開根號，並顯示小數點至第六位。

print("%.6f" % 2**0.5)

# --------------------------------------------------------------------------------------------------------

# [題目2-3]
# 若一數字只能被1和本身整除，則此數字稱為質數。 請列印出1~1000數字中的質數? print(number, end = )

def num (j):
    for i in range(3,j+1) :
        result = True
        for k in range(2,i-1) :
            if i % k == 0 :
                result = False
        if result == True :
            print(i)

num(1000)

help(num)
        
def num2(a):
    x=1
    for b in range(3,a+1) :
        result2 = 7
        for c in range(2,b-1) :
            if b % c == 0 :
                result2 = False
        if result2 == 7 :
            print(b)
            x+=1
    print(f"1到{a}中有{x}個質數")

num2(1000)


# --------------------------------------------------------------------------------------------------------

# [題目3]
# 使用if-else語句搭配 break，使得 while迴圈內 i值為5時終止迴圈，最後print出 all_i。

# i = 0
# all_i = []
# while i<200:
#     all_i.append(i)
#     if i == 5:
#       pass
#     i += 1
# print(all_i)

i = 0
all_i = []
while i<200:
    all_i.append(i)
    if i == 5:
      break
    i += 1
print(all_i)


# --------------------------------------------------------------------------------------------------------

# [題目4]
# 請撰寫正則表達式於 regex_rule，以篩選(re.findall所有以 en結尾的內容

# --------------------------------------------------------------------------------------------------------

# [題目5-1]
# 解析api格式之資料，將 book_prices中 BookF的值取出，賦值給 book_f_price後print出。

# book_prices = {
#     "BookA": 10,
#     "BookB": 30,
#     "BookC": 70,
#     "BookD": 90,
#     "BookE": 100,
#     "BookF": 250,    
# }

# book_f_price = 
# print(book_f_price)

book_prices = {
    "BookA": 10,
    "BookB": 30,
    "BookC": 70,
    "BookD": 90,
    "BookE": 100,
    "BookF": 250,    
}

book_f_price = book_prices["BookF"]
print(book_f_price)


# --------------------------------------------------------------------------------------------------------

# [題目5-2]
# data = "From:User Lee (user@company.com) Sat Jan 5 09:14:16 2016“ 請從data的字串中，擷取出email
# data = "From:User Lee (user@company.com) Sat Jan 5 09:14:16 2016"

data = "From:User Lee (user@company.com) Sat Jan 5 09:14:16 2016"


a=data.split(" ")
print(a[2][1:-1])

# --------------------------------------------------------------------------------------------------------

# [題目6]
# 使用Google Chrome瀏覽器之開發者人員工具時，
# 我們於Console內若希望以類似python3中print()函數功能將 "Hello World!"印出，
#  使用之js程式碼為`console.l??("Hello World!")` ；請問該 `l??`函數之完整名稱為?

# 請輸入於 func_name 中
# func_name = "l??"
# print(func_name)



# --------------------------------------------------------------------------------------------------------

# [題目7-1]
# 假如使用者帳號是Jack，密碼是1234 列印出 Hello Jack
# name = "Jack"
# pwd = "1234"

# --------------------------------------------------------------------------------------------------------

# [題目7-2]
# 請使用 requests 套件，取得 https://pythonscraping.com/pages/page1.html 的原始碼字串
# import requests as rs

# --------------------------------------------------------------------------------------------------------

# [題目8]
# 如果每個月底(每個月最後一日)固定存款1萬元台幣，銀行的年利率是5%，
# 每月採用複利計算。請問如果要存到100萬元，需經過幾個月存款呢? 建議使用while loop來解這個問題。

# 年利率5%，則每個月的利率為5%/12=0.4167%
# 1萬元放在銀行，本金加利率總額為 10000*(1+0.05/12)=10041.67元
# total=0
# i=0
# # while loop ...




def mon100wan():
    Total_Money = 0
    moon = 0    
    while Total_Money <= 1000000:
        Total_Money+=10000
        Total_Money*=1.004167
        moon+=1
        print(Total_Money)
        print(moon)
    return moon

mon100wan()  

gghgjj=0
assssss=0
while gghgjj <=1000000:
    gghgjj+=10000
    gghgjj*=1.004167
    assssss+=1
    print(gghgjj)
    print(assssss) 










# --------------------------------------------------------------------------------------------------------

# [題目9]

# 現有一個List，其內容為： my_list=[10,20,30,10,20,30] 
# 請找出10位於此List的index位置 請用print(List)的方式輸出結果

# my_list=[10,20,30,10,20,30]
# my_list_out=[]
# pos=0
# # for loop start

my_list=[10,20,30,10,20,30]
my_list_out=[]
pos=0

for i in my_list:
    if i == 10:
        my_list_out.append(pos)
    pos+=1
      

print(my_list_out)


# #for loop end
# print(my_list_out)


# 補充enumerate(my_list) 可以直接抓位置和值(x,y)

# my_list=[10,20,30,10,20,30] 
# my_list_out=[]
# pos =10

# for x,y in enumerate(my_list):
#     if y == 10:
#         my_list_out+=[x]
# print(my_list_out)



# --------------------------------------------------------------------------------------------------------

# [題目10]
# 閏年的規則為： 「公元年分除以4可整除但公元年分除以100不可整除」 或 「公元年分除以400可整除」 
# 公元是以1年開始計算的，請利用迴圈與Tuple，把截至2020年的所有閏年放入一個Tuple中，並用print(Tuple)輸出結果。

tuple_year=()
list_year=[]
# for loop start
for i in range(1,2020+1):
    if i % 4==0 and i%100 !=0 or i%400==0:
        list_year.append(i)

# # for loop end
tuple_year=tuple(list_year)
print(tuple_year)


# --------------------------------------------------------------------------------------------------------

# [題目11]

# 現有一字典變數 d = {"a": 1, "b": 2}，請根據此字典變數 d ，輸出b的數值。


# --------------------------------------------------------------------------------------------------------

# [題目12]

# 現有兩個集合： s1 = {1,2,3,4,5} s2 = {4,5,6,7,8} 請求出這兩個集合的聯集，並用print()函數顯示出來
# s1 = {1,2,3,4,5}
# s2 = {4,5,6,7,8}

for ggg in range(2,3):
    print(ggg)
# --------------------------------------------------------------------------------------------------------

# [題目13]
# 建立一個 Series，顯示內容如下 ``` Lisk 34 Mary 26 John 19 Fiona 28 Rita 12 dtype: int64 ```


# --------------------------------------------------------------------------------------------------------

# [題目14]

# 有一個 Series 如下: 
# ``` data_dict = {"BDSE": 22, "AIEN": 20, "AIOT": 32, "SESE": 32} data = pd.Series(data_dict) ``` 
# 對該 Series 加入一個新資料 "MFEE"，內容值為 25，顯示 Series 內容如下: 
# ``` BDSE 22 AIEN 20 AIOT 32 SESE 32 MFEE 25 dtype: int64 ```

# --------------------------------------------------------------------------------------------------------

# [題目15]

# 使用匿名函數判斷數字3是否為偶數

# odd_or_even = -----   
# # 請將-----變更為匿名函數
# # print(odd_or_even(3))

# --------------------------------------------------------------------------------------------------------

# [題目16]

# 有一個 Series 如下: 
# ``` date_idx = pd.date_range("2019-03-01", periods=11, freq="M") 
# sr = pd.Series([32, 77, 31, 5, None, 23, 82, 14, 8, None ,64], index=date_idx) sr ``` 
# 請計算該 Series 有多少空值，顯示結果如下: ``` Numbers of null : 2 ```


# --------------------------------------------------------------------------------------------------------

# [題目17]

# 有一個 DataFrame 如下: ``` df = pd.DataFrame({"A": np.random.randint(1, 40, 4), 
# "B": np.random.randint(10, 50, 4)}) ``` 請計算該 DataFrame 的平均值，
# 顯示類似如下的結果: ``` 0 40.0 1 12.0 2 9.5 3 42.0 dtype: float64 ```

# --------------------------------------------------------------------------------------------------------

# [題目18]

# 若想以h1標籤輸出Hello, World，需將下列程式如何修改? <_____ class="txt">Hello World<______>    
# console.log("______,______")

# --------------------------------------------------------------------------------------------------------


# --------------------------------------------------------------------------------------------------------

# [自設計題目1] 設計一個函數 輸入可以取得因數

# def inshu(num5):
#     for ggh in range(1,num5+1):
#         if num5 % ggh == 0:
#             print(ggh)


# inshu(1000)

# --------------------------------------------------------------------------------------------------------

init_tuple = (3) 
print (init_tuple.__len__())


print(x=3,x)
